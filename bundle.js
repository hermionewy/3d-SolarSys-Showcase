!function(g){var I={};function C(n){if(I[n])return I[n].exports;var e=I[n]={i:n,l:!1,exports:{}};return g[n].call(e.exports,e,e.exports,C),e.l=!0,e.exports}C.m=g,C.c=I,C.d=function(g,I,n){C.o(g,I)||Object.defineProperty(g,I,{configurable:!1,enumerable:!0,get:n})},C.r=function(g){Object.defineProperty(g,"__esModule",{value:!0})},C.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return C.d(I,"a",I),I},C.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},C.p="",C(C.s=6)}([function(module,exports){eval("/*!\r\n  * Stickyfill – `position: sticky` polyfill\r\n  * v. 2.0.5 | https://github.com/wilddeer/stickyfill\r\n  * MIT License\r\n  */\r\n\r\n;(function(window, document) {\r\n    'use strict';\r\n    \r\n    /*\r\n     * 1. Check if the browser supports `position: sticky` natively or is too old to run the polyfill.\r\n     *    If either of these is the case set `seppuku` flag. It will be checked later to disable key features\r\n     *    of the polyfill, but the API will remain functional to avoid breaking things.\r\n     */\r\n    \r\n    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n    \r\n    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n    \r\n    var seppuku = false;\r\n    \r\n    // The polyfill cant’t function properly without `getComputedStyle`.\r\n    if (!window.getComputedStyle) seppuku = true;\r\n    // Dont’t get in a way if the browser supports `position: sticky` natively.\r\n    else {\r\n            var testNode = document.createElement('div');\r\n    \r\n            if (['', '-webkit-', '-moz-', '-ms-'].some(function (prefix) {\r\n                try {\r\n                    testNode.style.position = prefix + 'sticky';\r\n                } catch (e) {}\r\n    \r\n                return testNode.style.position != '';\r\n            })) seppuku = true;\r\n        }\r\n    \r\n    /*\r\n     * 2. “Global” vars used across the polyfill\r\n     */\r\n    \r\n    // Check if Shadow Root constructor exists to make further checks simpler\r\n    var shadowRootExists = typeof ShadowRoot !== 'undefined';\r\n    \r\n    // Last saved scroll position\r\n    var scroll = {\r\n        top: null,\r\n        left: null\r\n    };\r\n    \r\n    // Array of created Sticky instances\r\n    var stickies = [];\r\n    \r\n    /*\r\n     * 3. Utility functions\r\n     */\r\n    function extend(targetObj, sourceObject) {\r\n        for (var key in sourceObject) {\r\n            if (sourceObject.hasOwnProperty(key)) {\r\n                targetObj[key] = sourceObject[key];\r\n            }\r\n        }\r\n    }\r\n    \r\n    function parseNumeric(val) {\r\n        return parseFloat(val) || 0;\r\n    }\r\n    \r\n    function getDocOffsetTop(node) {\r\n        var docOffsetTop = 0;\r\n    \r\n        while (node) {\r\n            docOffsetTop += node.offsetTop;\r\n            node = node.offsetParent;\r\n        }\r\n    \r\n        return docOffsetTop;\r\n    }\r\n    \r\n    /*\r\n     * 4. Sticky class\r\n     */\r\n    \r\n    var Sticky = function () {\r\n        function Sticky(node) {\r\n            _classCallCheck(this, Sticky);\r\n    \r\n            if (!(node instanceof HTMLElement)) throw new Error('First argument must be HTMLElement');\r\n            if (stickies.some(function (sticky) {\r\n                return sticky._node === node;\r\n            })) throw new Error('Stickyfill is already applied to this node');\r\n    \r\n            this._node = node;\r\n            this._stickyMode = null;\r\n            this._active = false;\r\n    \r\n            stickies.push(this);\r\n    \r\n            this.refresh();\r\n        }\r\n    \r\n        _createClass(Sticky, [{\r\n            key: 'refresh',\r\n            value: function refresh() {\r\n                if (seppuku || this._removed) return;\r\n                if (this._active) this._deactivate();\r\n    \r\n                var node = this._node;\r\n    \r\n                /*\r\n                 * 1. Save node computed props\r\n                 */\r\n                var nodeComputedStyle = getComputedStyle(node);\r\n                var nodeComputedProps = {\r\n                    top: nodeComputedStyle.top,\r\n                    display: nodeComputedStyle.display,\r\n                    marginTop: nodeComputedStyle.marginTop,\r\n                    marginBottom: nodeComputedStyle.marginBottom,\r\n                    marginLeft: nodeComputedStyle.marginLeft,\r\n                    marginRight: nodeComputedStyle.marginRight,\r\n                    cssFloat: nodeComputedStyle.cssFloat\r\n                };\r\n    \r\n                /*\r\n                 * 2. Check if the node can be activated\r\n                 */\r\n                if (isNaN(parseFloat(nodeComputedProps.top)) || nodeComputedProps.display == 'table-cell' || nodeComputedProps.display == 'none') return;\r\n    \r\n                this._active = true;\r\n    \r\n                /*\r\n                 * 3. Get necessary node parameters\r\n                 */\r\n                var referenceNode = node.parentNode;\r\n                var parentNode = shadowRootExists && referenceNode instanceof ShadowRoot ? referenceNode.host : referenceNode;\r\n                var nodeWinOffset = node.getBoundingClientRect();\r\n                var parentWinOffset = parentNode.getBoundingClientRect();\r\n                var parentComputedStyle = getComputedStyle(parentNode);\r\n    \r\n                this._parent = {\r\n                    node: parentNode,\r\n                    styles: {\r\n                        position: parentNode.style.position\r\n                    },\r\n                    offsetHeight: parentNode.offsetHeight\r\n                };\r\n                this._offsetToWindow = {\r\n                    left: nodeWinOffset.left,\r\n                    right: document.documentElement.clientWidth - nodeWinOffset.right\r\n                };\r\n                this._offsetToParent = {\r\n                    top: nodeWinOffset.top - parentWinOffset.top - parseNumeric(parentComputedStyle.borderTopWidth),\r\n                    left: nodeWinOffset.left - parentWinOffset.left - parseNumeric(parentComputedStyle.borderLeftWidth),\r\n                    right: -nodeWinOffset.right + parentWinOffset.right - parseNumeric(parentComputedStyle.borderRightWidth)\r\n                };\r\n                this._styles = {\r\n                    position: node.style.position,\r\n                    top: node.style.top,\r\n                    bottom: node.style.bottom,\r\n                    left: node.style.left,\r\n                    right: node.style.right,\r\n                    width: node.style.width,\r\n                    marginTop: node.style.marginTop,\r\n                    marginLeft: node.style.marginLeft,\r\n                    marginRight: node.style.marginRight\r\n                };\r\n    \r\n                var nodeTopValue = parseNumeric(nodeComputedProps.top);\r\n                this._limits = {\r\n                    start: nodeWinOffset.top + window.pageYOffset - nodeTopValue,\r\n                    end: parentWinOffset.top + window.pageYOffset + parentNode.offsetHeight - parseNumeric(parentComputedStyle.borderBottomWidth) - node.offsetHeight - nodeTopValue - parseNumeric(nodeComputedProps.marginBottom)\r\n                };\r\n    \r\n                /*\r\n                 * 4. Ensure that the node will be positioned relatively to the parent node\r\n                 */\r\n                var parentPosition = parentComputedStyle.position;\r\n    \r\n                if (parentPosition != 'absolute' && parentPosition != 'relative') {\r\n                    parentNode.style.position = 'relative';\r\n                }\r\n    \r\n                /*\r\n                 * 5. Recalc node position.\r\n                 *    It’s important to do this before clone injection to avoid scrolling bug in Chrome.\r\n                 */\r\n                this._recalcPosition();\r\n    \r\n                /*\r\n                 * 6. Create a clone\r\n                 */\r\n                var clone = this._clone = {};\r\n                clone.node = document.createElement('div');\r\n    \r\n                // Apply styles to the clone\r\n                extend(clone.node.style, {\r\n                    width: nodeWinOffset.right - nodeWinOffset.left + 'px',\r\n                    height: nodeWinOffset.bottom - nodeWinOffset.top + 'px',\r\n                    marginTop: nodeComputedProps.marginTop,\r\n                    marginBottom: nodeComputedProps.marginBottom,\r\n                    marginLeft: nodeComputedProps.marginLeft,\r\n                    marginRight: nodeComputedProps.marginRight,\r\n                    cssFloat: nodeComputedProps.cssFloat,\r\n                    padding: 0,\r\n                    border: 0,\r\n                    borderSpacing: 0,\r\n                    fontSize: '1em',\r\n                    position: 'static'\r\n                });\r\n    \r\n                referenceNode.insertBefore(clone.node, node);\r\n                clone.docOffsetTop = getDocOffsetTop(clone.node);\r\n            }\r\n        }, {\r\n            key: '_recalcPosition',\r\n            value: function _recalcPosition() {\r\n                if (!this._active || this._removed) return;\r\n    \r\n                var stickyMode = scroll.top <= this._limits.start ? 'start' : scroll.top >= this._limits.end ? 'end' : 'middle';\r\n    \r\n                if (this._stickyMode == stickyMode) return;\r\n    \r\n                switch (stickyMode) {\r\n                    case 'start':\r\n                        extend(this._node.style, {\r\n                            position: 'absolute',\r\n                            left: this._offsetToParent.left + 'px',\r\n                            right: this._offsetToParent.right + 'px',\r\n                            top: this._offsetToParent.top + 'px',\r\n                            bottom: 'auto',\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            marginTop: 0\r\n                        });\r\n                        break;\r\n    \r\n                    case 'middle':\r\n                        extend(this._node.style, {\r\n                            position: 'fixed',\r\n                            left: this._offsetToWindow.left + 'px',\r\n                            right: this._offsetToWindow.right + 'px',\r\n                            top: this._styles.top,\r\n                            bottom: 'auto',\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            marginTop: 0\r\n                        });\r\n                        break;\r\n    \r\n                    case 'end':\r\n                        extend(this._node.style, {\r\n                            position: 'absolute',\r\n                            left: this._offsetToParent.left + 'px',\r\n                            right: this._offsetToParent.right + 'px',\r\n                            top: 'auto',\r\n                            bottom: 0,\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0\r\n                        });\r\n                        break;\r\n                }\r\n    \r\n                this._stickyMode = stickyMode;\r\n            }\r\n        }, {\r\n            key: '_fastCheck',\r\n            value: function _fastCheck() {\r\n                if (!this._active || this._removed) return;\r\n    \r\n                if (Math.abs(getDocOffsetTop(this._clone.node) - this._clone.docOffsetTop) > 1 || Math.abs(this._parent.node.offsetHeight - this._parent.offsetHeight) > 1) this.refresh();\r\n            }\r\n        }, {\r\n            key: '_deactivate',\r\n            value: function _deactivate() {\r\n                var _this = this;\r\n    \r\n                if (!this._active || this._removed) return;\r\n    \r\n                this._clone.node.parentNode.removeChild(this._clone.node);\r\n                delete this._clone;\r\n    \r\n                extend(this._node.style, this._styles);\r\n                delete this._styles;\r\n    \r\n                // Check whether element’s parent node is used by other stickies.\r\n                // If not, restore parent node’s styles.\r\n                if (!stickies.some(function (sticky) {\r\n                    return sticky !== _this && sticky._parent && sticky._parent.node === _this._parent.node;\r\n                })) {\r\n                    extend(this._parent.node.style, this._parent.styles);\r\n                }\r\n                delete this._parent;\r\n    \r\n                this._stickyMode = null;\r\n                this._active = false;\r\n    \r\n                delete this._offsetToWindow;\r\n                delete this._offsetToParent;\r\n                delete this._limits;\r\n            }\r\n        }, {\r\n            key: 'remove',\r\n            value: function remove() {\r\n                var _this2 = this;\r\n    \r\n                this._deactivate();\r\n    \r\n                stickies.some(function (sticky, index) {\r\n                    if (sticky._node === _this2._node) {\r\n                        stickies.splice(index, 1);\r\n                        return true;\r\n                    }\r\n                });\r\n    \r\n                this._removed = true;\r\n            }\r\n        }]);\r\n    \r\n        return Sticky;\r\n    }();\r\n    \r\n    /*\r\n     * 5. Stickyfill API\r\n     */\r\n    \r\n    \r\n    var Stickyfill = {\r\n        stickies: stickies,\r\n        Sticky: Sticky,\r\n    \r\n        addOne: function addOne(node) {\r\n            // Check whether it’s a node\r\n            if (!(node instanceof HTMLElement)) {\r\n                // Maybe it’s a node list of some sort?\r\n                // Take first node from the list then\r\n                if (node.length && node[0]) node = node[0];else return;\r\n            }\r\n    \r\n            // Check if Stickyfill is already applied to the node\r\n            // and return existing sticky\r\n            for (var i = 0; i < stickies.length; i++) {\r\n                if (stickies[i]._node === node) return stickies[i];\r\n            }\r\n    \r\n            // Create and return new sticky\r\n            return new Sticky(node);\r\n        },\r\n        add: function add(nodeList) {\r\n            // If it’s a node make an array of one node\r\n            if (nodeList instanceof HTMLElement) nodeList = [nodeList];\r\n            // Check if the argument is an iterable of some sort\r\n            if (!nodeList.length) return;\r\n    \r\n            // Add every element as a sticky and return an array of created Sticky instances\r\n            var addedStickies = [];\r\n    \r\n            var _loop = function _loop(i) {\r\n                var node = nodeList[i];\r\n    \r\n                // If it’s not an HTMLElement – create an empty element to preserve 1-to-1\r\n                // correlation with input list\r\n                if (!(node instanceof HTMLElement)) {\r\n                    addedStickies.push(void 0);\r\n                    return 'continue';\r\n                }\r\n    \r\n                // If Stickyfill is already applied to the node\r\n                // add existing sticky\r\n                if (stickies.some(function (sticky) {\r\n                    if (sticky._node === node) {\r\n                        addedStickies.push(sticky);\r\n                        return true;\r\n                    }\r\n                })) return 'continue';\r\n    \r\n                // Create and add new sticky\r\n                addedStickies.push(new Sticky(node));\r\n            };\r\n    \r\n            for (var i = 0; i < nodeList.length; i++) {\r\n                var _ret = _loop(i);\r\n    \r\n                if (_ret === 'continue') continue;\r\n            }\r\n    \r\n            return addedStickies;\r\n        },\r\n        refreshAll: function refreshAll() {\r\n            stickies.forEach(function (sticky) {\r\n                return sticky.refresh();\r\n            });\r\n        },\r\n        removeOne: function removeOne(node) {\r\n            // Check whether it’s a node\r\n            if (!(node instanceof HTMLElement)) {\r\n                // Maybe it’s a node list of some sort?\r\n                // Take first node from the list then\r\n                if (node.length && node[0]) node = node[0];else return;\r\n            }\r\n    \r\n            // Remove the stickies bound to the nodes in the list\r\n            stickies.some(function (sticky) {\r\n                if (sticky._node === node) {\r\n                    sticky.remove();\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n        remove: function remove(nodeList) {\r\n            // If it’s a node make an array of one node\r\n            if (nodeList instanceof HTMLElement) nodeList = [nodeList];\r\n            // Check if the argument is an iterable of some sort\r\n            if (!nodeList.length) return;\r\n    \r\n            // Remove the stickies bound to the nodes in the list\r\n    \r\n            var _loop2 = function _loop2(i) {\r\n                var node = nodeList[i];\r\n    \r\n                stickies.some(function (sticky) {\r\n                    if (sticky._node === node) {\r\n                        sticky.remove();\r\n                        return true;\r\n                    }\r\n                });\r\n            };\r\n    \r\n            for (var i = 0; i < nodeList.length; i++) {\r\n                _loop2(i);\r\n            }\r\n        },\r\n        removeAll: function removeAll() {\r\n            while (stickies.length) {\r\n                stickies[0].remove();\r\n            }\r\n        }\r\n    };\r\n    \r\n    /*\r\n     * 6. Setup events (unless the polyfill was disabled)\r\n     */\r\n    function init() {\r\n        // Watch for scroll position changes and trigger recalc/refresh if needed\r\n        function checkScroll() {\r\n            if (window.pageXOffset != scroll.left) {\r\n                scroll.top = window.pageYOffset;\r\n                scroll.left = window.pageXOffset;\r\n    \r\n                Stickyfill.refreshAll();\r\n            } else if (window.pageYOffset != scroll.top) {\r\n                scroll.top = window.pageYOffset;\r\n                scroll.left = window.pageXOffset;\r\n    \r\n                // recalc position for all stickies\r\n                stickies.forEach(function (sticky) {\r\n                    return sticky._recalcPosition();\r\n                });\r\n            }\r\n        }\r\n    \r\n        checkScroll();\r\n        window.addEventListener('scroll', checkScroll);\r\n    \r\n        // Watch for window resizes and device orientation changes and trigger refresh\r\n        window.addEventListener('resize', Stickyfill.refreshAll);\r\n        window.addEventListener('orientationchange', Stickyfill.refreshAll);\r\n    \r\n        //Fast dirty check for layout changes every 500ms\r\n        var fastCheckTimer = void 0;\r\n    \r\n        function startFastCheckTimer() {\r\n            fastCheckTimer = setInterval(function () {\r\n                stickies.forEach(function (sticky) {\r\n                    return sticky._fastCheck();\r\n                });\r\n            }, 500);\r\n        }\r\n    \r\n        function stopFastCheckTimer() {\r\n            clearInterval(fastCheckTimer);\r\n        }\r\n    \r\n        var docHiddenKey = void 0;\r\n        var visibilityChangeEventName = void 0;\r\n    \r\n        if ('hidden' in document) {\r\n            docHiddenKey = 'hidden';\r\n            visibilityChangeEventName = 'visibilitychange';\r\n        } else if ('webkitHidden' in document) {\r\n            docHiddenKey = 'webkitHidden';\r\n            visibilityChangeEventName = 'webkitvisibilitychange';\r\n        }\r\n    \r\n        if (visibilityChangeEventName) {\r\n            if (!document[docHiddenKey]) startFastCheckTimer();\r\n    \r\n            document.addEventListener(visibilityChangeEventName, function () {\r\n                if (document[docHiddenKey]) {\r\n                    stopFastCheckTimer();\r\n                } else {\r\n                    startFastCheckTimer();\r\n                }\r\n            });\r\n        } else startFastCheckTimer();\r\n    }\r\n    \r\n    if (!seppuku) init();\r\n    \r\n    /*\r\n     * 7. Expose Stickyfill\r\n     */\r\n    if (typeof module != 'undefined' && module.exports) {\r\n        module.exports = Stickyfill;\r\n    } else {\r\n        window.Stickyfill = Stickyfill;\r\n    }\r\n    \r\n})(window, document);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(e){ true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined}(function(){var e=function(e){function n(){g=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){return setTimeout(e,1e3/60)}}function t(){if(h&&"number"==typeof h){var e=Math.min(Math.max(0,h),1);return q-e*q}return q}function i(){var e=document.documentElement.clientHeight,n=window.innerHeight||0;q=Math.max(e,n)}function o(){y=!1;var e=t();A=A.filter(function(n){var t=n.getBoundingClientRect(),i=t.top,o=i<e;if(o&&!n.__enter_view){if(m(n),_)return!1}else!o&&n.__enter_view&&w&&w(n);return n.__enter_view=o,!0}),A.length||window.removeEventListener("scroll",r,!0)}function r(){y||(y=!0,g(o))}function u(){i(),o()}function f(e){for(var n=e.length,t=[],i=0;i<n;i+=1)t.push(e[i]);return t}function c(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return"string"==typeof e?f(n.querySelectorAll(e)):e instanceof NodeList?f(e):e instanceof Array?e:void 0}function d(){A=c(l)}function a(){window.addEventListener("resize",u,!0),window.addEventListener("scroll",r,!0),u()}function s(){var e=l&&m;e||console.error("must set selector and enter options"),n(),d(),a(),o()}var l=e.selector,m=e.enter,w=e.exit,v=e.offset,h=void 0===v?0:v,p=e.once,_=void 0!==p&&p,g=null,y=!1,A=[],q=0;s()};return e});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbnRlci12aWV3L2VudGVyLXZpZXcubWluLmpzPzM4ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7IWZ1bmN0aW9uKGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSgpOndpbmRvdy5lbnRlclZpZXc9ZS5jYWxsKHRoaXMpfShmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG4oKXtnPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oZSl7cmV0dXJuIHNldFRpbWVvdXQoZSwxZTMvNjApfX1mdW5jdGlvbiB0KCl7aWYoaCYmXCJudW1iZXJcIj09dHlwZW9mIGgpe3ZhciBlPU1hdGgubWluKE1hdGgubWF4KDAsaCksMSk7cmV0dXJuIHEtZSpxfXJldHVybiBxfWZ1bmN0aW9uIGkoKXt2YXIgZT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LG49d2luZG93LmlubmVySGVpZ2h0fHwwO3E9TWF0aC5tYXgoZSxuKX1mdW5jdGlvbiBvKCl7eT0hMTt2YXIgZT10KCk7QT1BLmZpbHRlcihmdW5jdGlvbihuKXt2YXIgdD1uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGk9dC50b3Asbz1pPGU7aWYobyYmIW4uX19lbnRlcl92aWV3KXtpZihtKG4pLF8pcmV0dXJuITF9ZWxzZSFvJiZuLl9fZW50ZXJfdmlldyYmdyYmdyhuKTtyZXR1cm4gbi5fX2VudGVyX3ZpZXc9bywhMH0pLEEubGVuZ3RofHx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLHIsITApfWZ1bmN0aW9uIHIoKXt5fHwoeT0hMCxnKG8pKX1mdW5jdGlvbiB1KCl7aSgpLG8oKX1mdW5jdGlvbiBmKGUpe2Zvcih2YXIgbj1lLmxlbmd0aCx0PVtdLGk9MDtpPG47aSs9MSl0LnB1c2goZVtpXSk7cmV0dXJuIHR9ZnVuY3Rpb24gYyhlKXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06ZG9jdW1lbnQ7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/ZihuLnF1ZXJ5U2VsZWN0b3JBbGwoZSkpOmUgaW5zdGFuY2VvZiBOb2RlTGlzdD9mKGUpOmUgaW5zdGFuY2VvZiBBcnJheT9lOnZvaWQgMH1mdW5jdGlvbiBkKCl7QT1jKGwpfWZ1bmN0aW9uIGEoKXt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHUsITApLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsciwhMCksdSgpfWZ1bmN0aW9uIHMoKXt2YXIgZT1sJiZtO2V8fGNvbnNvbGUuZXJyb3IoXCJtdXN0IHNldCBzZWxlY3RvciBhbmQgZW50ZXIgb3B0aW9uc1wiKSxuKCksZCgpLGEoKSxvKCl9dmFyIGw9ZS5zZWxlY3RvcixtPWUuZW50ZXIsdz1lLmV4aXQsdj1lLm9mZnNldCxoPXZvaWQgMD09PXY/MDp2LHA9ZS5vbmNlLF89dm9pZCAwIT09cCYmcCxnPW51bGwseT0hMSxBPVtdLHE9MDtzKCl9O3JldHVybiBlfSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// D3 is included by globally by default\nvar Graphic = function Graphic() {\n    var width = window.innerWidth,\n        height = window.innerHeight;\n    var scene = new THREE.Scene(),\n        sceneAtmosphere = new THREE.Scene();\n    var camera = new THREE.OrthographicCamera(width / -1, width / 1, height / 1, height / -1, 0.01, 15000);\n    var self = this;\n\n    // var helper = new THREE.CameraHelper( camera );\n    // scene.add( helper );\n    var controls = void 0,\n        raycaster = void 0,\n        mouse = { x: 0, y: 0 },\n        intersects = void 0,\n        INTERSECTED = void 0;\n    var AU = 27,\n        sunSize = 348.15;\n    var renderer = new THREE.WebGLRenderer();\n    //const stats = new Stats(), gui = new dat.GUI();\n    var category = ['Population', 'GDP', 'Literacy'];\n\n    var planetData = [{ name: 'Mercury', size: 1.2, orbitRadius: sunSize + AU * 0.4, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.8, rotateSpeed: 0.05, img: './assets/model/mercury.jpeg' }, { name: 'Venus', size: 3, orbitRadius: sunSize + AU * 0.7, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.7, rotateSpeed: 0.05, img: './assets/model/venus.jpeg' }, { name: 'Earth', size: 3, orbitRadius: sunSize + AU, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.6, rotateSpeed: 0.05, img: './assets/model/earth2.jpg' }, { name: 'Mars', size: 1.6, orbitRadius: sunSize + AU * 1.5, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.48, rotateSpeed: 0.05, img: './assets/model/mars.jpeg' }, { name: 'Jupiter', size: 34.99, orbitRadius: sunSize + AU * 5.2, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.22, rotateSpeed: 0.05, img: './assets/model/jupiter.jpeg' }, { name: 'Saturn', size: 29.1, orbitRadius: sunSize + AU * 9.5, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.18, rotateSpeed: 0.05, img: './assets/model/saturn.png' }, { name: 'Uranus', size: 12.7, orbitRadius: sunSize + AU * 19.2, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.13, rotateSpeed: 0.05, img: './assets/model/uranus.jpeg' }, { name: 'Neptune', size: 12.3, orbitRadius: sunSize + AU * 30.1, orbitAngle: getRandomArbitrary(360, 360), orbitSpeed: 0.1, rotateSpeed: 0.05, img: './assets/model/neptune.jpeg' }, { name: 'Sun', size: sunSize, orbitRadius: 0, orbitAngle: 0, orbitSpeed: 0.1, rotateSpeed: 0.05, img: './assets/model/sun.jpg' }];\n    var Shaders = {\n        'earth': {\n            uniforms: {},\n            vertexShader: ['varying vec3 vNormal;', 'void main() {', 'vNormal = normalize( normalMatrix * normal );', 'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n            fragmentShader: ['varying vec3 vNormal;', 'void main() {', 'float intensity = pow( 0.8 - dot( vNormal, vec3( 0, 0, 1.0 ) ), 12.0 );', 'gl_FragColor = vec4( 0.074, 0.996, 0.992, 1.0 ) * intensity;', '}'].join('\\n')\n        },\n        'atmosphere': {\n            uniforms: {},\n            vertexShader: ['varying vec3 vNormal;', 'void main() {', 'vNormal = normalize( normalMatrix * normal );', 'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n            fragmentShader: ['varying vec3 vNormal;', 'void main() {', 'float intensity = pow( 0.8 - dot( vNormal, vec3( 0, 0, 1.0 ) ), 12.0 );', 'gl_FragColor = vec4( 0.996, 0.544, 0.092, 1.0 ) * intensity;', '}'].join('\\n')\n        }\n    };\n    var textMaterial = new THREE.MeshLambertMaterial({ color: 0xffffff });\n    var mercuryText = new THREE.Mesh();\n    var venusText = new THREE.Mesh();\n    var marsText = new THREE.Mesh();\n    var earthText = new THREE.Mesh();\n    var jupiterText = new THREE.Mesh();\n    var saturnText = new THREE.Mesh();\n    var uranusText = new THREE.Mesh();\n    var neptuneText = new THREE.Mesh();\n    var mercury = createStars(planetData[0].size, planetData[0].img, 10, \"Mercury\");\n    var venus = createStars(planetData[1].size, planetData[1].img, 25, \"Venus\");\n    var earth = createStars(planetData[2].size, planetData[2].img, 40, \"Earth\");\n    var mars = createStars(planetData[3].size, planetData[3].img, 10, \"Mars\");\n    var jupiter = createStars(planetData[4].size, planetData[4].img, 10, \"Jupiter\");\n    var saturn = createStars(planetData[5].size, planetData[5].img, 10, \"Saturn\");\n    var uranus = createStars(planetData[6].size, planetData[6].img, 10, \"Uranus\");\n    var neptune = createStars(planetData[7].size, planetData[7].img, 10, \"Neptune\");\n    var sun = createStars(planetData[8].size, planetData[8].img, 50, \"Sun\");\n    //sun glow\n    createGlow(sun, new THREE.SphereGeometry(sunSize, 50, 50), Shaders['atmosphere'], 1.02);\n    //createGlow(earth, new THREE.SphereGeometry(3, 40, 40), Shaders['earth'], 1.03); //earthGlow\n\n    var allText = [];\n    var earthDataGeo = void 0,\n        earthDataMesh = void 0;\n    var baseGeo = new THREE.Geometry();\n    var baseMesh = void 0;\n    var textSize = 3;\n    var tooltipGeo = void 0,\n        tooltipMesh = void 0;\n    var preSelected = { 'Country': '' };\n    var tooltip = document.getElementsByClassName('yw_tooltip')[0];\n\n    function init() {\n\n        scene.add(camera);\n        scene.add(new THREE.AmbientLight(0xffffff));\n\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        document.getElementById('solar-canvas').appendChild(renderer.domElement); //A canvas is automatically created by the renderer in the constructor.\n\n        // controls, camera\n        controls = new THREE.OrbitControls(camera, renderer.domElement);\n        controls.enableZoom = false;\n        controls.target.set(375, 0, 0);\n        camera.position.set(375, 0, 2000);\n        // camera.position.set( 200, 18, 2000 );\n        controls.update(); //must be called after any manual changes to the camera's transform\n\n        raycaster = new THREE.Raycaster();\n\n        //document.getElementById('solar-canvas').appendChild( stats.dom );\n\n        //create saturn ring\n        var saturnSize = 29.1;\n        var saturnRingMaterial = new THREE.MeshLambertMaterial({\n            map: THREE.ImageUtils.loadTexture('./assets/model/saturnRing.png'),\n            flatShading: THREE.SmoothShading,\n            side: THREE.DoubleSide,\n            transparent: true\n        });\n        var saturnRingStart = saturnSize + 3.3;\n        var saturnRingEnd = saturnSize + 60;\n        var saturnRing = new THREE.Mesh(new THREE.RingGeometry(saturnRingStart, saturnRingEnd, 30), saturnRingMaterial);\n        saturn.add(saturnRing);\n        saturnRing.rotation.x = 90 * Math.PI / 180;\n\n        new THREE.FontLoader().load('./assets/model/helvetiker_regular.typeface.json', function (font) {\n            mercuryText = createText(mercury, mercuryText, planetData[0].name, font);\n            venusText = createText(venus, venusText, planetData[1].name, font);\n            earthText = createText(earth, earthText, planetData[2].name, font);\n            marsText = createText(mars, marsText, planetData[3].name, font);\n            saturnText = createText(saturn, saturnText, planetData[4].name, font);\n            jupiterText = createText(jupiter, jupiterText, planetData[5].name, font);\n            uranusText = createText(uranus, uranusText, planetData[6].name, font);\n            neptuneText = createText(neptune, neptuneText, planetData[7].name, font);\n            allText = [mercuryText, venusText, earthText, marsText, saturnText, jupiterText, uranusText, neptuneText];\n        });\n        //cube\n        var earthCubeSize = 10;\n        earthDataGeo = new THREE.BoxGeometry(earthCubeSize, earthCubeSize, earthCubeSize, 1);\n        earthDataGeo.applyMatrix(new THREE.Matrix4().makeTranslation(0, 0, -0.5));\n        earthDataMesh = new THREE.Mesh(earthDataGeo);\n\n        //helper\n        // gui.add(camera.position, 'x', -2000, 10000);\n        // gui.add(camera.position, 'y', -2000, 10000);\n        // gui.add(camera.position, 'z', -2000, 10000);\n\n        addData();\n\n        //tooltip\n\n        tooltipGeo = new THREE.BoxGeometry(10, 10, 10, 1);\n        tooltipGeo.applyMatrix(new THREE.Matrix4().makeTranslation(0, 0, -0.5));\n        var tooltipMat = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        tooltipMesh = new THREE.Mesh(tooltipGeo, tooltipMat);\n        tooltipMesh.name = 'tooltip_mesh';\n        scene.add(tooltipMesh);\n    }\n\n    function createText(planet, planetText, text, font) {\n        var textGeometry = new THREE.TextGeometry(text, {\n            font: font,\n            size: textSize,\n            bevelEnabled: false,\n            height: 1\n        });\n        planetText = new THREE.Mesh(textGeometry, textMaterial);\n        planet.add(planetText);\n        return planetText;\n    }\n    function getMax(data, attr) {\n        return data.reduce(function (max, p) {\n            return p[attr] > max ? p[attr] : max;\n        }, data[0][attr]);\n    }\n    function getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n    function planetRotate(planet, text, id, yTextPos, xTextPos, textSize) {\n        if (!yTextPos) yTextPos = 0;\n        var data = planetData[id];\n        //let radians = planetData[id].orbitAngle * Math.PI / 180;\n        planet.position.x = planetData[id].orbitRadius;\n        planet.position.z = 0;\n        planet.position.y = 0;\n        //planet.rotation.y += planetData[id].rotateSpeed;\n        text.position.x = planetData[id].size + xTextPos / camera.zoom;\n        text.position.y = yTextPos;\n        text.position.z = 0;\n        text.scale.set(textSize, textSize, textSize);\n        // text.scale()\n        text.needsUpdate = true;\n    }\n\n    function resize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix(); //Updates the camera projection matrix. Must be called after any change of parameters.\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    function createStars(size, img, segment, name) {\n        var textureLoader = new THREE.TextureLoader();\n        var material = new THREE.MeshLambertMaterial({\n            map: textureLoader.load(img),\n            flatShading: THREE.SmoothShading\n        });\n        var planet = new THREE.Mesh(new THREE.SphereGeometry(size, segment, segment), material);\n        planet.name = name;\n        scene.add(planet);\n        return planet;\n    }\n\n    function addData() {\n        // Promise\n        var requestData = request('GET', './assets/model/allCountries.json');\n        // call our promise\n        requestData.then(processData).then(addToEarth).then(function (fulfilled) {\n            return console.log(fulfilled);\n        }).catch(function (error) {\n            return console.log(error.message);\n        });\n    }\n\n    function request(method, url) {\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(method, url);\n            xhr.onload = resolve;\n            xhr.onerror = reject;\n            xhr.send();\n        });\n    }\n\n    function processData(data) {\n        return new Promise(function (resolve, reject) {\n            var newData = JSON.parse(data.target.responseText);\n            console.log('process data');\n            newData.forEach(function (t) {\n                addPoint(+t.Latitude, +t.Longitude, 0, getColor(+t['Population']), baseGeo);\n            });\n            self.data = newData;\n            baseGeo.morphTargets.push({ 'name': 'target-' + 0, vertices: baseGeo.vertices });\n\n            var _loop = function _loop(i) {\n                var attr = category[i];\n                var maxInAttr = getMax(newData, attr);\n                console.log(attr, maxInAttr);\n                var subGeo = new THREE.Geometry();\n                newData.forEach(function (d) {\n                    var size = +d[attr] / maxInAttr / 2; // linearScale\n                    addPoint(+d.Latitude, +d.Longitude, size, getColor(size), subGeo);\n                });\n                baseGeo.morphTargets.push({ 'name': 'target-' + (i + 1), vertices: subGeo.vertices });\n            };\n\n            for (var i = 0; i < 3; i++) {\n                _loop(i);\n            }\n            resolve();\n        });\n    }\n    function addToEarth() {\n        baseMesh = new THREE.Mesh(baseGeo, new THREE.MeshBasicMaterial({\n            color: 0xffff00,\n            vertexColors: THREE.FaceColors,\n            morphTargets: true\n        }));\n        earth.add(baseMesh);\n        console.log(baseMesh);\n        var message = 'added baseMesh';\n        return Promise.resolve(message);\n    }\n\n    function createGlow(planet, geometry, shader, scale) {\n        var uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n\n        var material = new THREE.ShaderMaterial({\n\n            uniforms: uniforms,\n            vertexShader: shader.vertexShader,\n            fragmentShader: shader.fragmentShader,\n            side: THREE.BackSide,\n            blending: THREE.AdditiveBlending\n            // transparent: true\n        });\n        var mesh = new THREE.Mesh(geometry, material);\n        mesh.scale.set(scale, scale, scale);\n        mesh.matrixAutoUpdate = false;\n        mesh.updateMatrix();\n        planet.add(mesh); // the glow\n    }\n    // animate();\n    function animate() {\n        var param = Math.sqrt(camera.zoom).toFixed(2);\n        var xTextPos = 30 / param;\n        var newTextSize = textSize / camera.zoom;\n        planetRotate(mercury, mercuryText, 0, -30 / param, xTextPos, newTextSize);\n        planetRotate(venus, venusText, 1, -15 / param, xTextPos, newTextSize);\n        planetRotate(earth, earthText, 2, 0 / param, xTextPos, newTextSize);\n        planetRotate(mars, marsText, 3, 15 / param, xTextPos, newTextSize);\n        planetRotate(jupiter, jupiterText, 4, 30 / param, xTextPos, newTextSize);\n        planetRotate(saturn, saturnText, 5, 30 / param, xTextPos, newTextSize);\n        planetRotate(uranus, uranusText, 6, 10 / param, xTextPos, newTextSize);\n        planetRotate(neptune, neptuneText, 7, 10 / param, xTextPos, newTextSize);\n        camera.updateProjectionMatrix();\n        sun.position.x = 0;\n        sun.position.z = 0;\n        sun.position.y = 0;\n        //stats.update();\n        TWEEN.update();\n        //The code below doesn't work. It cannot get right texts\n        // eightPlanets.forEach(function (planet, id) {\n        //     planetRotate(planet, allText[id], id);\n        // })\n\n        render();\n\n        requestAnimationFrame(animate);\n    }\n\n    function shrinkFonts() {}\n\n    function addPoint(lat, lng, size, color, geo) {\n        var phi = (90 - lat) * Math.PI / 180;\n        var theta = (360 - lng) * Math.PI / 180;\n        var r = 3;\n        earthDataMesh.position.x = r * Math.sin(phi) * Math.cos(theta);\n        earthDataMesh.position.y = r * Math.cos(phi);\n        earthDataMesh.position.z = r * Math.sin(phi) * Math.sin(theta);\n        earthDataMesh.scale.z = -size;\n        earthDataMesh.scale.x = 1 / 400;\n        earthDataMesh.scale.y = 1 / 400;\n        earthDataMesh.lookAt(new THREE.Vector3(0, 0, 0));\n        earthDataMesh.updateMatrix();\n        for (var i = 0; i < earthDataMesh.geometry.faces.length; i++) {\n            earthDataMesh.geometry.faces[i].color = color;\n        }\n        // earthDataMesh.material = material? material : new THREE.MeshBasicMaterial();\n        earthDataMesh.updateMatrix();\n        //console.log(earthDataMesh);\n        geo.merge(earthDataMesh.geometry, earthDataMesh.matrix);\n    }\n\n    function onDocumentMouseMove(event) {\n        event.preventDefault();\n        mouse.x = event.clientX / window.innerWidth * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    }\n\n    function getColor(x) {\n\n        var color = x > 100000000 ? new THREE.Color(\"rgb(255, 130, 0)\") : new THREE.Color(\"rgb(0, 255, 255)\");\n        return color;\n    };\n\n    //TODO: add raycaster to baseMesh\n    function render() {\n        camera.lookAt(earth.position);\n        renderer.render(scene, camera);\n        raycaster.setFromCamera(mouse, camera);\n        if (baseMesh != undefined) {\n            intersects = raycaster.intersectObject(baseMesh);\n            if (intersects.length > 0) {\n                if (INTERSECTED != intersects[0].faceIndex) {\n                    var selectedMesh = intersects[0].object;\n                    INTERSECTED = Math.floor(intersects[0].faceIndex / 12);\n                    showTooltip(INTERSECTED);\n                }\n            } else if (INTERSECTED !== null) {\n                INTERSECTED = null;\n                tooltip.classList.remove(\"active\");\n                // intersects[0].object.geometry.scale(new THREE.Vector3( 1, 1, 1 ));\n            }\n        }\n    }\n\n    this.__defineSetter__('time', function (t) {\n        //console.log('setTime: ', t);\n        // t= 0, 1/3, 2/3\n        //morphTransition(t);\n        this._time = t;\n    });\n\n    this.__defineGetter__('time', function () {\n        return this._time || 0;\n    });\n\n    function showTooltip(selected) {\n        var selectedData = self.data[selected];\n        if (selectedData != undefined && selectedData['Country'] != preSelected['Country']) {\n            console.log(selectedData);\n            tooltip.classList.add(\"active\");\n            console.log(selectedData['Country']);\n            tooltip.innerHTML = '<p><strong>' + selectedData['Country'] + '</strong></br>\\n            Population: ' + addCommas(selectedData['Population']) + '</br>\\n            GDP: ' + addCommas(selectedData['GDP']) + ' $ per capita</br>\\n            Literacy rate: ' + selectedData['Literacy'] + '% </p>';\n        }\n    }\n\n    function addCommas(nStr) {\n        nStr += '';\n        var x = nStr.split('.');\n        var x1 = x[0];\n        var x2 = x.length > 1 ? '.' + x[1] : '';\n        var rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + ',' + '$2');\n        }\n        return x1 + x2;\n    }\n\n    function getBaseMesh() {\n        if (baseMesh != undefined) {\n            return baseMesh;\n        }\n    }\n\n    function getCamera() {\n        return camera;\n    }\n\n    window.addEventListener('resize', resize);\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n\n    this.init = init;\n    this.resize = resize;\n    this.animate = animate;\n    this.getCamera = getCamera;\n    this.getBaseMesh = getBaseMesh;\n\n    return this;\n};\n\nexports.default = Graphic;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n\tvalue: true\n});\n// device sniffing for mobile\n\nvar isMobile = {\n\tandroid: function android() {\n\t\treturn navigator.userAgent.match(/Android/i);\n\t},\n\n\tblackberry: function blackberry() {\n\t\treturn navigator.userAgent.match(/BlackBerry/i);\n\t},\n\n\tios: function ios() {\n\t\treturn navigator.userAgent.match(/iPhone|iPad|iPod/i);\n\t},\n\n\topera: function opera() {\n\t\treturn navigator.userAgent.match(/Opera Mini/i);\n\t},\n\n\twindows: function windows() {\n\t\treturn navigator.userAgent.match(/IEMobile/i);\n\t},\n\n\tany: function any() {\n\t\treturn isMobile.android() || isMobile.blackberry() || isMobile.ios() || isMobile.opera() || isMobile.windows();\n\t}\n};\n\nexports.default = isMobile;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvdXRpbHMvaXMtbW9iaWxlLmpzP2E5NTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGV2aWNlIHNuaWZmaW5nIGZvciBtb2JpbGVcblxuY29uc3QgaXNNb2JpbGUgPSB7XG5cdGFuZHJvaWQ6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0FuZHJvaWQvaSksXG5cblx0YmxhY2tiZXJyeTogKCkgPT4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvQmxhY2tCZXJyeS9pKSxcblxuXHRpb3M6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lQaG9uZXxpUGFkfGlQb2QvaSksXG5cblx0b3BlcmE6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL09wZXJhIE1pbmkvaSksXG5cblx0d2luZG93czogKCkgPT4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvSUVNb2JpbGUvaSksXG5cblx0YW55OiAoKSA9PiAoXG5cdFx0aXNNb2JpbGUuYW5kcm9pZCgpIHx8XG5cdFx0aXNNb2JpbGUuYmxhY2tiZXJyeSgpIHx8XG5cdFx0aXNNb2JpbGUuaW9zKCkgfHxcblx0XHRpc01vYmlsZS5vcGVyYSgpIHx8XG5cdFx0aXNNb2JpbGUud2luZG93cygpXG5cdCksXG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzTW9iaWxlXG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQVhBO0FBQ0E7QUFtQkEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports){eval('var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function("return this")() || (1, eval)("this");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === "object") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it\'s\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoIChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(4)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _lodash = __webpack_require__(5);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _isMobile = __webpack_require__(3);\n\nvar _isMobile2 = _interopRequireDefault(_isMobile);\n\nvar _graphic = __webpack_require__(2);\n\nvar _graphic2 = _interopRequireDefault(_graphic);\n\nvar _enterView = __webpack_require__(1);\n\nvar _enterView2 = _interopRequireDefault(_enterView);\n\nvar _stickyfilljs = __webpack_require__(0);\n\nvar _stickyfilljs2 = _interopRequireDefault(_stickyfilljs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $body = d3.select('body'); // D3 is included by globally by default\n\nvar previousWidth = 0;\n\nvar container = d3.select('#main-content');\nvar stepSel = container.selectAll('.step');\nvar graphic = new _graphic2.default();\n\nfunction updateChart(index, camera) {\n    console.log('updateChart' + index);\n    var sel = container.select('[data-index=\\'' + index + '\\']');\n    stepSel.classed('is-active', function (d, i) {\n        return i === index;\n    });\n    if (index === 0) {\n        cameraTween(camera, 10000, 10000, 2000, 1);\n    } else if (index === 1) {\n        cameraTween(camera, 375, 18, 2000, 20);\n    } else if (index === 2) {\n        cameraTween(camera, 375, 8000, 2000, 150);\n    } else if (index === 3) {\n        cameraTween(camera, 425, 18, 2000, 200);\n        setTime(graphic, 0);\n    } else if (index === 4) {\n        setTime(graphic, 1);\n    } else if (index === 5) {\n        setTime(graphic, 2);\n        cameraTween(camera, 7000, 3000, 2000, 220);\n    } else if (index === 6) {\n        setTime(graphic, 3);\n        cameraTween(camera, 425, 18, 2000, 200);\n    } else if (index === 7) {\n        setTime(graphic, 0);\n        cameraTween(camera, 10000, 10000, 2000, 1);\n    }\n}\n\nfunction setTime(graphic, t) {\n    var baseMesh = graphic.getBaseMesh();\n    new TWEEN.Tween(graphic).to({ time: t / 4 }, 500).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(function () {\n        // console.log(this.time);\n        if (baseMesh != undefined) {\n            var morphDict = baseMesh.morphTargetDictionary;\n            var l = 3; //3\n            var scaledt = this.time * l + 1;\n            var index = Math.floor(scaledt);\n            for (var i = 0; i < l; i++) {\n                baseMesh.morphTargetInfluences[i] = 0;\n            }\n            var lastIndex = index - 1;\n            var leftover = scaledt - index;\n            if (lastIndex >= 0) {\n                baseMesh.morphTargetInfluences[lastIndex] = 1 - leftover;\n            }\n            baseMesh.morphTargetInfluences[index] = leftover;\n        }\n    }).start();\n}\n\nfunction scrollyTelling(camera) {\n    _stickyfilljs2.default.add(d3.select('.sticky').node());\n\n    (0, _enterView2.default)({\n        selector: stepSel.nodes(),\n        offset: 0.5,\n        enter: function enter(el) {\n            var index = +d3.select(el).attr('data-index');\n            updateChart(index, camera);\n        },\n        exit: function exit(el) {\n            var index = +d3.select(el).attr('data-index');\n            index = Math.max(0, index - 1);\n            updateChart(index, camera);\n        }\n    });\n}\n\nfunction resize() {\n    // only do resize on width changes, not height\n    // (remove the conditional if you want to trigger on height change)\n    var width = $body.node().offsetWidth;\n    if (previousWidth !== width) {\n        previousWidth = width;\n        graphic.resize();\n    }\n}\n\nfunction init() {\n    // add mobile class to body tag\n    $body.classed('is-mobile', _isMobile2.default.any());\n    // setup resize event\n    window.addEventListener('resize', (0, _lodash2.default)(resize, 150));\n    // kick off graphic code\n    graphic.init();\n    graphic.animate();\n    var camera = graphic.getCamera();\n    scrollyTelling(camera);\n}\n\nfunction cameraTween(camera, x, y, z, zoom) {\n    new TWEEN.Tween(camera).to({ zoom: zoom }, 2000).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(function () {\n        camera.zoom = this.zoom;\n    }).start();\n    var pos = camera.position;\n\n    new TWEEN.Tween(pos).to({ x: x, y: y, z: z }, 2000)\n    // .easing(TWEEN.Easing.Quadratic.InOut)\n    .onUpdate(function () {\n        camera.position.x = this.x;\n        camera.position.y = this.y;\n        camera.position.z = this.z;\n    }).start();\n}\ninit();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvZW50cnkuanM/NWM1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEMyBpcyBpbmNsdWRlZCBieSBnbG9iYWxseSBieSBkZWZhdWx0XG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoLmRlYm91bmNlJztcbmltcG9ydCBpc01vYmlsZSBmcm9tICcuL3V0aWxzL2lzLW1vYmlsZSc7XG5pbXBvcnQgR3JhcGhpYyBmcm9tICcuL2dyYXBoaWMnO1xuaW1wb3J0IGVudGVyVmlldyBmcm9tICdlbnRlci12aWV3JztcbmltcG9ydCBTdGlja3lmaWxsIGZyb20gJ3N0aWNreWZpbGxqcyc7XG5cbmNvbnN0ICRib2R5ID0gZDMuc2VsZWN0KCdib2R5Jyk7XG5sZXQgcHJldmlvdXNXaWR0aCA9IDA7XG5cbmNvbnN0IGNvbnRhaW5lciA9IGQzLnNlbGVjdCgnI21haW4tY29udGVudCcpO1xuY29uc3Qgc3RlcFNlbCA9IGNvbnRhaW5lci5zZWxlY3RBbGwoJy5zdGVwJyk7XG5jb25zdCBncmFwaGljID0gbmV3IEdyYXBoaWMoKTtcblxuZnVuY3Rpb24gdXBkYXRlQ2hhcnQoaW5kZXgsIGNhbWVyYSkge1xuICAgIGNvbnNvbGUubG9nKCd1cGRhdGVDaGFydCcgKyBpbmRleClcbiAgICBjb25zdCBzZWwgPSBjb250YWluZXIuc2VsZWN0KGBbZGF0YS1pbmRleD0nJHtpbmRleH0nXWApO1xuICAgIHN0ZXBTZWwuY2xhc3NlZCgnaXMtYWN0aXZlJywgKGQsIGkpID0+IGkgPT09IGluZGV4KTtcbiAgICBpZihpbmRleD09PTApIHtcbiAgICAgICAgY2FtZXJhVHdlZW4oY2FtZXJhLCAxMDAwMCwgMTAwMDAsIDIwMDAsIDEpXG5cdH0gZWxzZSBpZihpbmRleD09PTEpe1xuICAgICAgICBjYW1lcmFUd2VlbihjYW1lcmEsIDM3NSwgMTgsIDIwMDAsIDIwKVxuXHR9IGVsc2UgaWYoaW5kZXg9PT0yKXtcbiAgICAgICAgY2FtZXJhVHdlZW4oY2FtZXJhLCAzNzUsIDgwMDAsIDIwMDAsIDE1MClcblx0fSBlbHNlIGlmKGluZGV4PT09Myl7XG4gICAgICAgIGNhbWVyYVR3ZWVuKGNhbWVyYSwgNDI1LCAxOCwgMjAwMCwgMjAwKVxuICAgICAgICBzZXRUaW1lKGdyYXBoaWMsIDApO1xuICAgIH0gZWxzZSBpZihpbmRleD09PTQpe1xuXHQgICAgc2V0VGltZShncmFwaGljLCAxKTtcbiAgICB9IGVsc2UgaWYoaW5kZXg9PT01KXtcbiAgICAgICAgc2V0VGltZShncmFwaGljLCAyKTtcbiAgICAgICAgY2FtZXJhVHdlZW4oY2FtZXJhLCA3MDAwLCAzMDAwLCAyMDAwLCAyMjApXG4gICAgfWVsc2UgaWYoaW5kZXg9PT02KXtcbiAgICAgICAgc2V0VGltZShncmFwaGljLCAzKTtcbiAgICAgICAgY2FtZXJhVHdlZW4oY2FtZXJhLCA0MjUsIDE4LCAyMDAwLCAyMDApXG4gICAgfSBlbHNlIGlmKGluZGV4PT09Nyl7XG4gICAgICAgIHNldFRpbWUoZ3JhcGhpYywgMCk7XG4gICAgICAgIGNhbWVyYVR3ZWVuKGNhbWVyYSwgMTAwMDAsIDEwMDAwLCAyMDAwLCAxKVxuICAgIH1cbn1cblxuXG5cbmZ1bmN0aW9uIHNldFRpbWUgKGdyYXBoaWMsIHQpIHtcbiAgICBsZXQgYmFzZU1lc2ggPSBncmFwaGljLmdldEJhc2VNZXNoKCk7XG4gICAgbmV3IFRXRUVOLlR3ZWVuKGdyYXBoaWMpXG4gICAgICAgIC50byh7dGltZTogdC80fSwgNTAwKVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5RdWFkcmF0aWMuSW5PdXQpXG4gICAgICAgIC5vblVwZGF0ZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudGltZSk7XG4gICAgICAgICAgICBpZihiYXNlTWVzaCE9IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICAgICAgY29uc3QgbW9ycGhEaWN0ID0gYmFzZU1lc2gubW9ycGhUYXJnZXREaWN0aW9uYXJ5O1xuICAgICAgICAgICAgICAgIHZhciBsID0gMzsgLy8zXG4gICAgICAgICAgICAgICAgdmFyIHNjYWxlZHQgPSB0aGlzLnRpbWUqbCsxO1xuICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IE1hdGguZmxvb3Ioc2NhbGVkdCk7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaT0wO2k8bDtpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgYmFzZU1lc2gubW9ycGhUYXJnZXRJbmZsdWVuY2VzW2ldID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGxhc3RJbmRleCA9IGluZGV4IC0gMTtcbiAgICAgICAgICAgICAgICB2YXIgbGVmdG92ZXIgPSBzY2FsZWR0IC0gaW5kZXg7XG4gICAgICAgICAgICAgICAgaWYgKGxhc3RJbmRleCA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhc2VNZXNoLm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1tsYXN0SW5kZXhdID0gMSAtIGxlZnRvdmVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBiYXNlTWVzaC5tb3JwaFRhcmdldEluZmx1ZW5jZXNbaW5kZXhdID0gbGVmdG92ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5zdGFydCgpO1xufVxuXG5mdW5jdGlvbiBzY3JvbGx5VGVsbGluZyhjYW1lcmEpIHtcbiAgICBTdGlja3lmaWxsLmFkZChkMy5zZWxlY3QoJy5zdGlja3knKS5ub2RlKCkpO1xuXG4gICAgZW50ZXJWaWV3KHtcbiAgICAgICAgc2VsZWN0b3I6IHN0ZXBTZWwubm9kZXMoKSxcbiAgICAgICAgb2Zmc2V0OiAwLjUsXG4gICAgICAgIGVudGVyOiBlbCA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9ICtkMy5zZWxlY3QoZWwpLmF0dHIoJ2RhdGEtaW5kZXgnKTtcbiAgICAgICAgICAgIHVwZGF0ZUNoYXJ0KGluZGV4LCBjYW1lcmEpO1xuICAgICAgICB9LFxuICAgICAgICBleGl0OiBlbCA9PiB7XG4gICAgICAgICAgICBsZXQgaW5kZXggPSArZDMuc2VsZWN0KGVsKS5hdHRyKCdkYXRhLWluZGV4Jyk7XG4gICAgICAgICAgICBpbmRleCA9IE1hdGgubWF4KDAsIGluZGV4IC0gMSk7XG4gICAgICAgICAgICB1cGRhdGVDaGFydChpbmRleCwgY2FtZXJhKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiByZXNpemUoKSB7XG5cdC8vIG9ubHkgZG8gcmVzaXplIG9uIHdpZHRoIGNoYW5nZXMsIG5vdCBoZWlnaHRcblx0Ly8gKHJlbW92ZSB0aGUgY29uZGl0aW9uYWwgaWYgeW91IHdhbnQgdG8gdHJpZ2dlciBvbiBoZWlnaHQgY2hhbmdlKVxuXHRjb25zdCB3aWR0aCA9ICRib2R5Lm5vZGUoKS5vZmZzZXRXaWR0aDtcblx0aWYgKHByZXZpb3VzV2lkdGggIT09IHdpZHRoKSB7XG5cdFx0cHJldmlvdXNXaWR0aCA9IHdpZHRoO1xuXHRcdGdyYXBoaWMucmVzaXplKCk7XG5cdH1cbn1cblxuZnVuY3Rpb24gaW5pdCgpIHtcblx0Ly8gYWRkIG1vYmlsZSBjbGFzcyB0byBib2R5IHRhZ1xuXHQkYm9keS5jbGFzc2VkKCdpcy1tb2JpbGUnLCBpc01vYmlsZS5hbnkoKSk7XG5cdC8vIHNldHVwIHJlc2l6ZSBldmVudFxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZGVib3VuY2UocmVzaXplLCAxNTApKTtcblx0Ly8ga2ljayBvZmYgZ3JhcGhpYyBjb2RlXG5cdGdyYXBoaWMuaW5pdCgpO1xuXHRncmFwaGljLmFuaW1hdGUoKTtcblx0bGV0IGNhbWVyYSA9IGdyYXBoaWMuZ2V0Q2FtZXJhKCk7XG4gICAgc2Nyb2xseVRlbGxpbmcoY2FtZXJhKTtcbn1cblxuZnVuY3Rpb24gY2FtZXJhVHdlZW4oY2FtZXJhLCB4LHkseix6b29tKXtcbiAgICBuZXcgVFdFRU4uVHdlZW4oY2FtZXJhKVxuICAgICAgICAudG8oe3pvb206IHpvb219LCAyMDAwKVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5RdWFkcmF0aWMuSW5PdXQpXG4gICAgICAgIC5vblVwZGF0ZShmdW5jdGlvbigpIHtcbiAgICAgICAgXHRjYW1lcmEuem9vbSA9IHRoaXMuem9vbTtcbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXJ0KCk7XG4gICAgbGV0IHBvcyA9IGNhbWVyYS5wb3NpdGlvbjtcblxuICAgIG5ldyBUV0VFTi5Ud2Vlbihwb3MpXG4gICAgICAgIC50byh7eDp4LCB5OnksIHo6en0sIDIwMDApXG4gICAgICAgIC8vIC5lYXNpbmcoVFdFRU4uRWFzaW5nLlF1YWRyYXRpYy5Jbk91dClcbiAgICAgICAgLm9uVXBkYXRlKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY2FtZXJhLnBvc2l0aW9uLnggPSB0aGlzLng7XG4gICAgICAgICAgICBjYW1lcmEucG9zaXRpb24ueSA9IHRoaXMueTtcbiAgICAgICAgICAgIGNhbWVyYS5wb3NpdGlvbi56ID0gdGhpcy56O1xuICAgICAgICB9KVxuICAgICAgICAuc3RhcnQoKTtcbn1cbmluaXQoKTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTtBQUNBOzs7QUFBQTtBQUNBOzs7QUFBQTtBQUNBOzs7QUFBQTtBQUNBOzs7QUFBQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFYQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n")}]);